plugins {
    id "java"
    id "application"
    id "com.github.ben-manes.versions" version "0.33.0"
    id "com.github.johnrengelman.shadow" version "6.0.0"
}

group "com.solostudios.omnivoxscraper"
version "0.0.1-alpha.2"
mainClassName ="null"
setArchivesBaseName("Omnivox Scrapper")

repositories {
    mavenCentral()
}

dependencies {
    testCompile("junit:junit:4.13")
    implementation("net.sourceforge.htmlunit:htmlunit:2.43.0")
    implementation("org.mnode.ical4j:ical4j:3.0.19")
    implementation("org.jetbrains:annotations:20.1.0")
    //implementation("org.jsoup:jsoup:1.13.1")
}

test {
    systemProperty("OMNIVOX_PASSWORD", omnivox_password)
    systemProperty("OMNIVOX_USERNAME", omnivox_username)
}

shadowJar {
//    classifier("withDependencies")
    //mergeServiceFiles()
    //classifier = "all"
    //archiveVersion = getVersion()
}

import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

task shadedJar(type: ShadowJar, dependsOn: shadowJar) {
    classifier("test")
    configurations = shadowJar.configurations
}

jar {
    manifest {
        attributes = ["Main-Class"            : mainClassName,
                      "Built-By"              : System.properties["user.name"],
                      "Build-Jdk"             : System.properties["java.version"],
                      "Implementation-Title"  : "OmnivoxScrapper",
                      "Implementation-Version": archiveVersion,
                      "Implementation-Vendor" : "Solo Studios",
                      "Created-By"            : "Shadow Jar"]
    }
}

javadoc {
    source = sourceSets.main.java.srcDirs
    classpath = sourceSets.main.runtimeClasspath
    ((StandardJavadocDocletOptions) options).tags("apiNote:a:API Note:", "implSpec:a:Implementation Requirements:", "implNote:a:Implementation Note:")
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}